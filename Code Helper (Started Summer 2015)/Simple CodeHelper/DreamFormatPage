This is to try to figure out what I want my format pages to look like.

I generally want something like:


set $^1 to $^2:::$^1 = $^2

or somthing like:

---il2 code---:

if $^1 then($^2):::
if $^1:
<il1>tab($^2)</>


---il1 code---:

tab($^1):::
$^1.replace("\n", "\n\t")


(would hashtag instead of subsections be a better method? So that phrases can appear under different goups? Yes...
But let's just do subsections for now)
So it seems like there are quite a few parts I have in this:
:Recognize Format number
:Recognize the start and end of the section that details this info
:Recognize sections of different levels
:Recognize item name
:Recognize stuff between item name and item
:Recognize when item has ended
:Recognize item
:Recognize stuff between item names
:Recognize section between sections

So let's make a bunch of different versions that it should still be able to read, so I know pretty much exactly what I want.

Trial 1:
**All Commands**
*Basic Commands*
set $^1 to $^2:::$^1 = $^2
make $^1 happy:::$^1.happy = True

*Communication Commands*
hello:::Hi there! How are you?

Trial 2:
---il2 code---:

if $^1 then($^2):::
if $^1:
<il1>tab($^2)</>


---il1 code---:

tab($^1):::
$^1.replace("\n", "\n\t")

Trial 3:
--------------------
Big Subsection
--------------------

Smaller subsection:

Item:hello
Another Item:hello2


Another smaller one:

Item3:hello3
Item4:hello4


--------------------
Another Big One
--------------------

Trial 4:
item1:
hello
item2:
goodbye
item3:
hello again

Trial 5:
item1:
a test

item2:
another test

*First Section
item3:
another item here

item4:
yep, item here

Trial 6:
***Big Section

*Small Section
item1:item
item2:another
item3:yet another

**Medium Section
item in medium section but not small:hi there

*Another small Section
item4:uh-huh
item5:nuh-uh

*Small Section3
item4:4mite
item5:5mite

Trial 7 (probably should fail):
***Spacy #three spaces here because this is a level3 section



**Section1 Lvl2 #two here because level 2


*Section1 Lvl1 #one because level 1

item1:item #none because actual item names and items
item2:item
item3:item

*Section2 Lvl1

item4:item
item5:item

**Section2 Lvl2 #not sure how this next spacing works; I don't think it should be allowed

item in bigger section: why hello there


*Section3 Lvl1

item6: hi
item7:item

Trial 8:
***This is supposed to be pretty normal
item:res
item:res

-
New Level 1 section
-
item:res
item:res


***Another class 3 section

-
New Level 1 section
-
item:res
item:res


%%Level 2 Section here%%

-
Another Level 1 section
-
item:res
item:res




So, a question: Do I always want new stuff to start on a new line? Or can you hide things inside?
Always start on a new line. Then, when notating the symbols, you can just skip that original newline.
But names and thier items can appear on the same line, so that's the only time you have to specify the newline.

Also, having something like a "standard" setup would be nice so then if you just want to quick make a doc you can...
and also create bots that will easily change between two different implementations.

But what I don't want is for the programmer to be able to specify "hey, *something* is a small subsection, **something** is...
a larger subsection, ***something*** is an even larger subsection, and keep on going" because that makes this more complicated...
and also makes it less accessible to people without programming skills.
That type of functionality can be added in a later version.
Also, items at the top of a section (or the document) are the only ones that are allowed to be outside of a catergory.
For an example see Trial 6

How should this whole space thing be defined? I can't quite tell yet what I'm doing.
I think the main thing I'm worried about is the end. I don't want to have to include space at the end.
So then I feel like the space should be attached to whatever is below (so at the end there is no space)
But then at the top I would need space. So the space is actually a divider in between elements.
So do I let the user set up how every single divider between all the types of subsections is going to be done?
The nice thing is that only a finite amount of subsections are allowed in this one, so it would be possible with an array of arrays.
But I also think it would be really time-comsuming at the same time.

The deal is, it's not just based on where you are...
(switching from an item to a 2nd level section, or a 3rd level section to a second level (but never the reverse))
It's based on what level section you are currently "in".
So this space occurs when you are jumping from a lower (or equal) level to a higher level.

This is starting to seem a bit complicated... Can I ignore it? Not if I want my document to look nice. So keep on chuggin' away!

So one possible model is that each section only tells the sections below it how to act when they're inside it (how much space to put in-between elements and such).
This actually works if you just have it tell the section directly below it. But only if a high-level group can contain ones far below it.

So let's scratch the whole "you can have subsections with unsorted items" thing. No. Your items need to be sorted.
And if you don't want to, I'll make a default section for them called "Unsorted" (it's supposed to be human-readable or else I'd do something like _unsorted).

Okay, so each section specifies the symbols (including spaces) at the top (since sections cannot be empty for easy thinking purposes) with its declaration symbols.
todo upgrade: probably could make it so that sections could be empty.
Then, it needs to specify the symbols to go in between subsections, and then the symbols to go after all the subsections are over.

This method seems to work for all the Trials except for the ones where the subsections contain elements more than one step down. Let's use it.



So the top part would probably go something like the following (#s signify comments):

Format 1.0 #format number

large section
medium section
small section
item name
item


#at least one blank line to signify the end of the hierarchy
large section:
Example:
----
large section
----

#spacing of "between elements" does matter, but case does not.
Between Elements:

After:
large section done

medium section
Example:
**medium section

Between Elements:

After:
medium section done

small section:
Example:
[small section]
Between Elements:
After:
small section done

#I am allowing the item name and item to specify stuff before and after, but treating them like a single object.
item name and item:
Example:
item name:+item+

item name and item done
format done

The format is done! woohoo!
This is where you can do things like:
London Lowmanstone IV
1/13/2016 #yes, this is the real date

start info